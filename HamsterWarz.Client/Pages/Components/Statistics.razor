@page "/statistics"
@inject IRequestService _service;


@if (TopHamsters == null && BottomHamsters == null)
{
    <h4>...Loading</h4>
}
else
{
    <div class="container">
        <div class="row">
            <h1>Top five competitors</h1>
            @foreach (var hamster in TopHamsters)
            {
                <HamsterCard Hamster="@hamster">
                    <ChildContent>
                        <h4>@hamster.Name</h4>
                        <br>
                        <p><b>Wins:</b> @hamster.Wins</p>
                    </ChildContent>
                </HamsterCard>
            }
        </div>
    </div>


    <div class="container">
        <div class="row">
            <h1>Bottom five competitors</h1>
            @foreach (var hamster in BottomHamsters)
            {
                <HamsterCard Hamster="@hamster">
                    <ChildContent>
                        <h4>@hamster.Name</h4>
                        <br>
                        <p><b>Defeats:</b> @hamster.Defeats</p>
                    </ChildContent>
                </HamsterCard>
            }
        </div>
    </div>

}

@code {
    private IEnumerable<Hamster> TopHamsters;
    private IEnumerable<Hamster> BottomHamsters;

    protected override async Task OnInitializedAsync()
    {
        TopHamsters = await _service.GetTopFiveCompetitors();
        BottomHamsters = await _service.GetBottomFiveCompetitors();
    }
}
